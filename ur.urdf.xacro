<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro" name="santi_arm">
   <!-- robot name parameter -->
   <!-- <xacro:arg name="name" default="santi_arm"/> -->
   <!-- import main macro -->
   <xacro:include filename="$(find ur_description)/urdf/ur_macro.xacro"/>

   <!-- possible 'ur_type' values: ur3, ur3e, ur5, ur5e, ur10, ur10e, ur16e, ur20 -->
   <!-- the default value should raise an error in case this was called without defining the type -->
   <xacro:arg name="ur_type" default="ur16e"/>

   <!-- parameters -->
   <xacro:arg name="tf_prefix" default="" />
   <xacro:arg name="joint_limit_params" default="$(find ur_description)/config/$(arg ur_type)/joint_limits.yaml"/>
   <xacro:arg name="kinematics_params" default="$(find ur_description)/config/$(arg ur_type)/default_kinematics.yaml"/>
   <xacro:arg name="physical_params" default="$(find ur_description)/config/$(arg ur_type)/physical_parameters.yaml"/>
   <xacro:arg name="visual_params" default="$(find ur_description)/config/$(arg ur_type)/visual_parameters.yaml"/>
   <xacro:arg name="transmission_hw_interface" default=""/>
   <xacro:arg name="safety_limits" default="false"/>
   <xacro:arg name="safety_pos_margin" default="0.15"/>
   <xacro:arg name="safety_k_position" default="20"/>
   <!-- ros2_control related parameters -->
   <xacro:arg name="headless_mode" default="false" />
   <xacro:arg name="robot_ip" default="0.0.0.0" />
   <xacro:arg name="script_filename" default=""/>
   <xacro:arg name="output_recipe_filename" default=""/>
   <xacro:arg name="input_recipe_filename" default=""/>
   <xacro:arg name="reverse_ip" default="0.0.0.0"/>
   <xacro:arg name="script_command_port" default="50004"/>
   <xacro:arg name="reverse_port" default="50001"/>
   <xacro:arg name="script_sender_port" default="50002"/>
   <xacro:arg name="trajectory_port" default="50003"/>
   <!--   tool communication related parameters-->
   <xacro:arg name="use_tool_communication" default="false" />
   <xacro:arg name="tool_voltage" default="0" />
   <xacro:arg name="tool_parity" default="0" />
   <xacro:arg name="tool_baud_rate" default="115200" />
   <xacro:arg name="tool_stop_bits" default="1" />
   <xacro:arg name="tool_rx_idle_chars" default="1.5" />
   <xacro:arg name="tool_tx_idle_chars" default="3.5" />
   <xacro:arg name="tool_device_name" default="/tmp/ttyUR" />
   <xacro:arg name="tool_tcp_port" default="54321" />

     <!-- Simulation parameters -->
   <xacro:arg name="use_fake_hardware" default="false" />
   <xacro:arg name="fake_sensor_commands" default="false" />
   <xacro:arg name="sim_gazebo" default="false" />
   <xacro:arg name="sim_ignition" default="false" />
   <xacro:arg name="simulation_controllers" default="" />

   <!-- initial position for simulations (Fake Hardware, Gazebo, Ignition) -->
   <xacro:arg name="initial_positions_file" default="$(find ur_description)/config/initial_positions.yaml"/>

   <!-- convert to property to use substitution in function -->
   <xacro:property name="initial_positions_file" default="$(arg initial_positions_file)"/>

   <!-- create link fixed to the "world" -->
   <link name="world" />

   <!-- arm -->
   <xacro:ur_robot
     name="santi_arm"
     tf_prefix=""
     parent="world"
     joint_limits_parameters_file="$(arg joint_limit_params)"
     kinematics_parameters_file="$(arg kinematics_params)"
     physical_parameters_file="$(arg physical_params)"
     visual_parameters_file="$(arg visual_params)"
     transmission_hw_interface="$(arg transmission_hw_interface)"
     safety_limits="$(arg safety_limits)"
     safety_pos_margin="$(arg safety_pos_margin)"
     safety_k_position="$(arg safety_k_position)"
     use_fake_hardware="$(arg use_fake_hardware)"
     fake_sensor_commands="$(arg fake_sensor_commands)"
     headless_mode="$(arg headless_mode)"
     initial_positions="${xacro.load_yaml(initial_positions_file)}"
     use_tool_communication="$(arg use_tool_communication)"
     tool_voltage="$(arg tool_voltage)"
     tool_parity="$(arg tool_parity)"
     tool_baud_rate="$(arg tool_baud_rate)"
     tool_stop_bits="$(arg tool_stop_bits)"
     tool_rx_idle_chars="$(arg tool_rx_idle_chars)"
     tool_tx_idle_chars="$(arg tool_tx_idle_chars)"
     tool_device_name="$(arg tool_device_name)"
     tool_tcp_port="$(arg tool_tcp_port)"
     robot_ip="$(arg robot_ip)"
     script_filename="$(arg script_filename)"
     output_recipe_filename="$(arg output_recipe_filename)"
     input_recipe_filename="$(arg input_recipe_filename)"
     reverse_ip="$(arg reverse_ip)"
     script_command_port="$(arg script_command_port)"
     reverse_port="$(arg reverse_port)"
     script_sender_port="$(arg script_sender_port)"
     trajectory_port="$(arg trajectory_port)"
     >
     <origin xyz="0 0 0" rpy="0 0 0" />          <!-- position robot in the world -->
   </xacro:ur_robot>
    
        <!-- Add ons by santi -->

    <!-- material -->

    <material name="blue">
      <color rgba="0 0 0.8 1"/>
    </material>

    <!-- links -->

    <!-- <link name="table">

      <visual>
        <geometry>
          <box size="1.524 0.9144 0"/>
          <origin xyz="0 0 0"/>
        </geometry>
        <material name="blue"/>
      </visual>

      <collision>
        <geometry>
          <box size="1.524 0.9144 0"/>
        </geometry>
      </collision>

      <inertia1>
        <mass value="181"/>
        <inertia ixx="1e-3" ixy="0.0" ixz="0.0" iyy="1e-3" iyz="0.0" izz="1e-3"/>
      </inertia1>

    </link> -->
    
    <!-- <link name="camara_mount">
      <visual>
        <geometry>
          <mesh filename="package://ur_description//meshes/ur16e/visual/camara_mount.STL" scale="0.001 0.001 0.001"/>
          <origin xyz="0 0 0"/>
        </geometry>
        <material name="blue"/>
      </visual>
    </link> -->

    <link name="camara_link">
      <visual>
        <geometry>
          <mesh filename="package://ur_description//meshes/ur16e/visual/lidar.STL" scale="0.001 0.001 0.001"/>
          <origin xyz="0 0 0"/>
        </geometry>
      </visual>
    </link>

    <!-- <link
      name="marker_link">
      <inertial>
        <origin
          xyz="0.000188955125563895 0.00026674155778017 0.0436850274991426"
          rpy="0 0 0" />
        <mass
          value="0.163787079259432" />
        <inertia
          ixx="5.31363141128401E-05"
          ixy="-2.08531188270481E-06"
          ixz="2.72089927650333E-07"
          iyy="5.18621922456916E-05"
          iyz="-1.44332735740437E-07"
          izz="5.38037147829041E-05" />
      </inertial>
      <visual>
        <origin
          xyz="0 0 0"
          rpy="0 0 0" />
        <geometry>
          <mesh
            filename="package://ur_description//meshes/ur16e/visual/marker_link.STL" />
        </geometry>
        <material
          name="">
          <color
            rgba="0.752941176470588 0.752941176470588 0.752941176470588 1" />
        </material>
      </visual>
    </link> -->

    <!-- joints -->

    <!-- <joint name="table_to_floor" type="fixed">
      <parent link="base"/>
      <child link="table"/>
      <origin xyz="0 0 -0.01" rpy="0 0 0"/>
    </joint> -->

    <joint name="camara_mount_to_tool0" type="fixed">
      <parent link="tool0"/>
      <child link="camara_link"/>
      <origin  xyz= "0.042 0.213 0.036" rpy="1.575 3.14 -0.02"/>
      <!-- <origin xyz="-0.07 0.15 0.018" rpy="-1.57  0 -1.5"/> -->
    </joint>

    <!-- <joint name="marker_to_tool0" type="fixed">
      <parent link="tool0"/>
      <child link="marker_link"/>
      <origin xyz="0 0 0.01" rpy="0  0 0"/>
    </joint> -->

    <!-- <joint name="camara_to_mount" type="fixed">
      <parent link="camara_mount"/>
      <child link="camara_link"/>
      <origin xyz="0.03 0 0" rpy="1.6 -1.6 0"/>
    </joint> -->

</robot>
